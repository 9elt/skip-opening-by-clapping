#!/bin/bash

detection_percentage_start="7.5%"
detection_percentage_end="7.5%"
clap_amplitude_threshold="0.7"
clap_energy_threshold="0.3"
clap_max_duration="600"

check_dependencies() {
    xdotool --version >&- || echo "xdotool is missing"
    wmctrl --version >&- || echo "wmctrl is missing"
    sox --version >&- || echo "sox is missing"
    bc --version >&- || echo "bc is missing"
}

check_dependencies

has_anime() {
    if [[ "${*}" =~ "anime" ]] ||
        [[ "${*}" =~ "Anime" ]] ||
        [[ "${*}" =~ "ANIME" ]]; then
        echo "1"
    fi
}

skip() {
    xdotool key Right
    xdotool key Right
    xdotool key Right
    xdotool key Right
}

on_clap() {
    CURRENT_WINDOW="$(xdotool getwindowfocus getwindowname)"
    AVAILABLE_WINDOWS="$(wmctrl -l)"

    if [[ "$(has_anime "$AVAILABLE_WINDOWS")" ]]; then
        if [[ "$(has_anime "$CURRENT_WINDOW")" ]]; then
            skip
        else
            wmctrl -R anime
            skip
            wmctrl -R "$CURRENT_WINDOW"
        fi
    fi
}

while true; do
    sound_data=$(sox -t alsa hw:0,0 tmp.wav silence 1 0.0001 $detection_percentage_start 1 0.1 $detection_percentage_end --no-show-progress stat 2>&1)

    length=$(echo "$sound_data" | sed -n 's#^Length[ ]*(seconds):[^0-9]*\([0-9.]*\)$#\1#p')
    max_amplitude=$(echo "$sound_data" | sed -n 's#^Maximum[ ]*amplitude:[^0-9]*\([0-9.]*\)$#\1#p')
    rms_amplitude=$(echo "$sound_data" | sed -n 's#^RMS[ ]*amplitude:[^0-9]*\([0-9.]*\)$#\1#p')

    lenght_test=$(echo "$length < $clap_max_duration" | bc -l)
    amplitude_test=$(echo "$max_amplitude > $clap_amplitude_threshold" | bc -l)
    energy_test=$(echo "$rms_amplitude < $clap_energy_threshold" | bc -l)

    if [ "$lenght_test" = "1" ] && [ "$amplitude_test" = "1" ] && [ "$energy_test" = "1" ]; then
        on_clap
    fi
done
